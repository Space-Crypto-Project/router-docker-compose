version: "3.8"

services:
  ################################################################################
  # ROUTER SERVICES
  router-publisher:
    container_name: router-publisher
    depends_on:
      - rabbitmq
      - signer
      - redis
    image: ghcr.io/connext/router-publisher:$ROUTER_VERSION
    restart: always
    environment:
      GRAPH_API_KEY: $GRAPH_API_KEY
#    ports:
#      - "localhost:${ROUTER_EXTERNAL_PORT}:8091" #uncomment if you want to communicate with router API from localhost
    logging:
      driver: json-file
      options:
        max-size: 10m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    volumes:
      - ./config.json:/home/node/packages/agents/router/config.json
    healthcheck:
      test: netstat -ltn | grep -c 8091
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  router-subscriber:
    container_name: router-subscriber
    depends_on:
      - rabbitmq
      - signer
      - redis
    image: ghcr.io/connext/router-subscriber:$ROUTER_VERSION
    restart: always
    environment:
      GRAPH_API_KEY: $GRAPH_API_KEY
    logging:
      driver: json-file
      options:
        max-size: 10m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    volumes:
      - ./config.json:/home/node/packages/agents/router/config.json
    healthcheck:
      test: netstat -ltn | grep -c 8090
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext


  ################################################################################
  # AUXILIARY SERVICES
  signer:
    container_name: signer
    image: consensys/web3signer:$WEB3SIGNER_VERSION
    command: "--config-file=/home/node/signer/config.yaml eth1"
    restart: always
    security_opt:
      - apparmor:unconfined  #needed for signer to be able to read key from mounted ramfs volume
    volumes:
      - ./data/signerConfig/config.yaml:/home/node/signer/config.yaml
      - ./key.yaml:/home/node/signer/keyFiles/key.yaml
    logging:
      driver: json-file
      options:
        max-size: 10m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    healthcheck:
      test: netstat -ltn | grep -c 9000
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:$RABBITMQ_VERSION
    healthcheck:
      test: ps aux| grep rabbitmq-server
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  redis:
    container_name: redis
    image: redis:$REDIS_VERSION
    restart: always
    volumes:
      - redis_data:/data
    logging:
      driver: json-file
      options:
        max-size: 10m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    healthcheck:
      test: redis-cli --raw incr ping
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  logdna:
    container_name: logdna
    image: logdna/logspout:$LOGDNA_VERSION
    restart: always
    environment:
      LOGDNA_KEY: $LOGDNA_KEY
      TAGS: $LOGDNA_TAG
    volumes:
      - /run/user/${USERID}/docker.sock:/var/run/docker.sock
    logging:
      driver: json-file
      options:
        max-size: 10m
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"
    healthcheck:
      test: netstat -ltn | grep -c 80
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  ################################################################################
  # MONITORING SERVICES

  prometheus:
    container_name: prometheus
    image: prom/prometheus:$PROMETHEUS_VERSION
    restart: always
    # ports:
    #   - $PROMETHEUS_EXTERNAL_PORT:9090  #uncomment this if you want/need direct Prometheus access
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=45d
    volumes:
      - ./data/prometheusConfig/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheusConfig/alert.rules.host:/etc/prometheus/alert.rules.host
      - ./data/prometheusConfig/alert.rules.prod:/etc/prometheus/alert.rules.prod
      - prometheus:/prometheus
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 9090
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:$ALERTAMANGER_VERSION
    restart: always
    # ports:
    #   - $ALERTMANAGER_EXTERNAL_PORT:9093 #uncomment this if you want/need direct Prometheus access
    command: --config.file=/config/alertmanager.yml --log.level=debug
    volumes:
      - ./data/alertmanagerConfig/alertmanager.yml:/config/alertmanager.yml
      - alertmanager:/data
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 9093
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  grafana:
    container_name: grafana
    image: grafana/grafana:$GRAFANA_VERSION
    restart: always
    ports:
      - $GRAFANA_EXTERNAL_PORT:3000
    environment:
      - GRAFANA_PASSWORD=$GRAFANA_PASSWORD
    volumes:
      - ./data/grafanaConfig/grafana:/etc/grafana
      - ./data/grafanaConfig/dashboards:/etc/dashboards
      - grafana:/var/lib/grafana
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 3000
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  loki:
    image: grafana/loki:$LOKI_VERSION
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./data/lokiConfig:/etc/loki
      - loki:/loki
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 3100
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  promtail:
    image: grafana/promtail:$PROMTAIL_VERSION
    volumes:
      - ~/.local/share/docker/containers:/var/lib/docker/containers
      - ./data/promtailConfig/config-rootless.yml:/etc/promtail/promtail.yml
    command: -config.file=/etc/promtail/promtail.yml
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: exit 0
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  ################################################################################
  # EXPORTER SERVICES

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:$NODE_EXPORTER_VERSION
    restart: always
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/rootfs
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|userfs/.local/share/docker/containers|userfs/.local/share/docker/overlay2|rootfs/run/user/${USERID}/docker/netns)(/)
    cap_add:
      - SYS_TIME
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - ~:/userfs:ro
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 9100
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:$CADVISOR_VERSION
    restart: always
    volumes:
      - /:/rootfs:ro
      - /run/user/${USERID}:/var/run
      - /etc/machine-id:/etc/machine-id:ro
      - ~/.local/share/docker:/var/lib/docker:ro
      - /sys:/sys:ro
      - /dev/disk:/dev/disk:ro
    devices:
      - /dev/kmsg:/dev/kmsg
    logging:
      driver: json-file
      options:
        max-size: 10m
    healthcheck:
      test: netstat -ltn | grep -c 8080
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - connext

################################################################################

networks:
  connext:

volumes:
  prometheus:
  grafana:
  loki:
  redis_data:
  alertmanager:
